@using ReviewProj.WebUI.Models;
@using ReviewProj.Domain.Entities
@model Enterprise

<!doctype html>
<html class="no-js" lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Institution Details</title>
    <link rel="stylesheet" href="http://dhbhdrzi4tiry.cloudfront.net/cdn/sites/foundation.min.css">
    <link href="~/Content/styles.css" rel="stylesheet" />
    <link href="~/Content/ratingStyle.css" rel="stylesheet" />
</head>
<body>
    <br>
    <div id="padding-style" class="row">
        <div class="medium-6 columns">
            
            @if (Model.Resources != null)
            {
                if (Model.Resources.Count == 0)
                {
                    string imgSrc = "~/Content/AppResources/no_image_available.png";
                    <a target="_blank" href="@Url.Content(imgSrc)">
                        <img class="thumbnail" src="@Url.Content(imgSrc)">
                    </a>
                }

                foreach (Resource res in Model.Resources)
                {
                    if (res.Type == ResourceType.MainImage)
                    {
                        string imgSrc = "~/Content/UserResources/" + @res.DataPath;
                        <a target="_blank" href="@Url.Content(imgSrc)">
                            <img class="thumbnail" src="@Url.Content(imgSrc)">
                        </a>
                        break;
                    }
                }

                <div class="row small-up-4">
                    @foreach (Resource res in Model.Resources)
                    {
                        if (res.Type == ResourceType.SecondaryImage)
                        {
                            string imgSrc = "~/Content/UserResources/" + @res.DataPath;
                            <div class="column">
                                <a target="_blank" href="@Url.Content(imgSrc)">
                                    <img class="thumbnail" src="@Url.Content(imgSrc)">
                                </a>
                            </div>
                        }
                    }
                </div>

            }


        </div>
        <div class="medium-6 large-5 columns">
            @if (Model != null)
            {
                double institutionRating = Model.Rating;
                
                <h3>@Model.Name
                    <div class="star">
                        @for (int i = 1; i <= 5; ++i) // 5 = max rating possible
                        {
                            string starStyle = RatingHelper.styleForStarIndexWithRating(i, institutionRating);
                            <span class=@starStyle>☆</span>
                        }
                    </div>
                </h3>
                <p>@Model.Description.</p>
            }
        </div>
        @if (ViewBag.UserRole == Role.Admin)
        {
        <div>
            @using (Html.BeginForm("DeleteInstitution", "InstitutionDetails"))
            {
                <input type="hidden" name="entId" value="@Model.EntId" />
                <input type="submit" value="Delete enterpeise" />
            }

            @using (Html.BeginForm("BunOwner", "InstitutionDetails"))
            {
                <input type="hidden" name="entId" value="@Model.EntId" />
                <input type="submit" value="BUN" />
            }
        </div>
        }
        <div class="column row">
            <hr>
            <div class="tabs-content" data-tabs-content="example-tabs">
                <div class="tabs-panel is-active" id="panel1">
                    <h4>@Resources.Resource.ReviewsKey</h4>

                        @foreach (Review review in Model.Reviews)
                        {
                            Reviewer reviewer = review.Reviewer;
                            double mark = Math.Round(review.Mark);

                            string reviewerAvatar = "~/Content/AppResources/avatar_placeholder.png";
                            if (reviewer.Resources.Count > 0)
                            {
                                reviewerAvatar = "~/Content/UserResources/" + @review.Reviewer.Resources.First().DataPath;
                            }

                            <div class="media-object stack-for-small">
                                <div class="media-object-section">
                                    <img class="thumbnail" src="@Url.Content(reviewerAvatar)" height="100" width="100">
                                </div>
                                <div class="media-object-section">
                                    <div class="star">
                                        @for (int i = 1; i <= 5; ++i) // 5 = max rating possible
                                        {
                                            string starStyle = RatingHelper.styleForStarIndexWithRating(i, mark);
                                            <span class=@starStyle>☆</span>
                                        }
                                    </div>
                                    <h5>@reviewer.UserName</h5>
                                    <p>@review.Description</p>

                                    @{
                                        ApplicationUser user = ViewBag.User;

                                        string userMail = "";

                                        bool enableButton = false;
                                        if (user != null)
                                        {
                                            userMail = user.Email;
                                            bool didCurrentUserVoteForReview = false;

                                            foreach(Vote vote in review.Votes)
                                            {
                                                if(vote.Voter.Id == user.Id)
                                                {
                                                    didCurrentUserVoteForReview = true;
                                                }
                                            }

                                            bool canVote = (ViewBag.UserRole == Role.Reviewer) && (review.Reviewer.Id != user.Id) && (!didCurrentUserVoteForReview);
                                            if (canVote)
                                            {
                                                enableButton = true;
                                            }
                                        }
                                            <button type="button" onclick="location.href='@Url.Action("UpvoteReview", "InstitutionDetails", new { id = review.ReviewId, reviewerEmail = userMail, entId = Model.EntId })'" @(enableButton ? "enabled" : "disabled") name="like"><img class="thumbnail" src="@Url.Content("~/Content/AppResources/like.png")" height="40" width="40" />@review.TotalLikes</button>
                                            <button type="button" onclick="location.href='@Url.Action("DownvoteReview", "InstitutionDetails", new { id = review.ReviewId, reviewerEmail = userMail, entId = Model.EntId })'" @(enableButton ? "enabled" : "disabled") name="dislike"><img class="thumbnail" src="@Url.Content("~/Content/AppResources/dislike.png")" height="40" width="40">@review.TotalDislikes</button>
                                    }
                                </div>
                            </div>
                            if (ViewBag.UserRole == Role.Admin)
                            {
                                <div>
                                    @using (Html.BeginForm("DeleteReview", "InstitutionDetails"))
                                    {
                                        <input type="hidden" name="reviewId" value="@review.ReviewId" />
                                        <input type="hidden" name="entId" value="@Model.EntId" />
                                        <input type="submit" value="Delete review" />
                                    }
                                    @using (Html.BeginForm("BunReviewer", "InstitutionDetails"))
                                    {
                                        <input type="hidden" name="reviewId" value="@review.ReviewId" />
                                        <input type="submit" value="BUN" />
                                    }
                                </div>
                            }

                        }

                @if (ViewBag.UserRole == Role.Reviewer)
                {
                    using (Html.BeginForm("AddReview", "InstitutionDetails", FormMethod.Get))
                    {
                        <div class="rating">
                            <h5>@Resources.Resource.PleaseRateKey</h5>
                            <input type="radio" id="star5" name="rating" value="5" /><label for="star5" title="Rocks!">5 stars</label>
                            <input type="radio" id="star4" name="rating" value="4" /><label for="star4" title="Pretty good">4 stars</label>
                            <input type="radio" id="star3" name="rating" value="3" /><label for="star3" title="Meh">3 stars</label>
                            <input type="radio" id="star2" name="rating" value="2" /><label for="star2" title="Kinda bad">2 stars</label>
                            <input type="radio" id="star1" name="rating" value="1" /><label for="star1" title="Sucks big time">1 star</label>
                        </div>
                        <input type="hidden" name="entId" value="@Model.EntId" />
                        <textarea placeholder="@Resources.Resource.TypeInReviewKey" name="reviewText"></textarea>
                        <button class="button" type="submit">@Resources.Resource.SubmitReviewKey</button>
                        }
                    }
            </div>
        </div>
    </div>
</body>
</html>